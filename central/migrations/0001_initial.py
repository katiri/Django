# Generated by Django 3.1.7 on 2021-04-07 16:06

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Exemplo',
            fields=[
                ('criados', models.DateField(verbose_name='Criação')),
                ('modificado', models.DateField(auto_now=True, verbose_name='Atualização')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('chave_unica', models.UUIDField(default=uuid.uuid4, error_messages={'blank': 'O campo não pode ser vazio.', 'invalid': 'Valor inválido.', 'null': 'O campo não pode ser nulo.', 'unique': 'Este valor já exite no banco de dados.'}, help_text='Está é a chave única', primary_key=True, serialize=False, unique=True, verbose_name='Código único do exemplo')),
                ('inteiro', models.IntegerField(error_messages={'blank': 'O campo não pode ser vazio.', 'invalid': 'Valor inválido.', 'null': 'O campo não pode ser nulo.'}, help_text='Digite um valor do tipo inteiro (-2147483648 a 2147483647)', verbose_name='Valor do tipo inteiro')),
                ('grande_inteiro', models.BigIntegerField(blank=True, error_messages={'invalid': 'Valor inválido.'}, help_text='Digite um valor grande do tipo inteiro (-9223372036854775808 a 9223372036854775807)', null=True, verbose_name='Valor grande do tipo inteiro')),
                ('pequeno_inteiro', models.SmallIntegerField(blank=True, error_messages={'invalid': 'Valor inválido.'}, help_text='Digite um valor pequeno do tipo inteiro (-32768 a 32767)', null=True, verbose_name='Valor pequeno do tipo inteiro')),
                ('inteiro_positivo', models.PositiveIntegerField(blank=True, error_messages={'invalid': 'Valor inválido.'}, help_text='Digite um valor do tipo inteiro positivo (0 a 2147483647)', null=True, verbose_name='Valor do tipo inteiro positivo')),
                ('grande_inteiro_positivo', models.PositiveBigIntegerField(blank=True, error_messages={'invalid': 'Valor inválido.'}, help_text='Digite um valor grade do tipo inteiro positivo (0 a 9223372036854775807)', null=True, verbose_name='Valor grande do tipo inteiro positivo')),
                ('pequeno_inteiro_positivo', models.PositiveSmallIntegerField(blank=True, error_messages={'invalid': 'Valor inválido.'}, help_text='Digite um valor pequeno do tipo inteiro positivo (0 a 32767)', null=True, verbose_name='Valor pequeno do tipo inteiro positivo')),
                ('num_decimal', models.DecimalField(decimal_places=2, error_messages={'blank': 'O campo não pode ser vazio.', 'invalid': 'Valor inválido.', 'null': 'O campo não pode ser nulo.'}, help_text='Digite um valor do tipo decimal (no máximo 2 casas decimais e 4 casas)', max_digits=4, verbose_name='Valor do tipo decimal')),
                ('num_float', models.FloatField(blank=True, error_messages={'invalid': 'Valor inválido.'}, help_text='Digite um valor do tipo float (no máximo duas casas decimais)', null=True, verbose_name='Valor do tipo float')),
                ('booleano', models.BooleanField(default=True, help_text='Este campo é verdadeiro ou falso', verbose_name='Campo checkbox, do tipo booleano')),
                ('frase', models.CharField(error_messages={'blank': 'O campo não pode ser vazio.', 'invalid': 'Valor inválido.', 'null': 'O campo não pode ser nulo.'}, help_text='Digite uma frase de até 42 caracteres', max_length=42, verbose_name='Campo de texto simples')),
                ('texto', models.TextField(error_messages={'blank': 'O campo não pode ser vazio.', 'invalid': 'Valor inválido.', 'null': 'O campo não pode ser nulo.'}, help_text='Digite uma frase de até 500 caracteres', max_length=500, verbose_name='Campo de texto grande')),
                ('email', models.EmailField(error_messages={'blank': 'O campo não pode ser vazio.', 'invalid': 'E-mail inválido.', 'null': 'O campo não pode ser nulo.'}, help_text='Digite uma email válido de até 200 caracteres', max_length=200, verbose_name='Campo de email')),
                ('link', models.URLField(error_messages={'blank': 'O campo não pode ser vazio.', 'invalid': 'Link inválido.', 'null': 'O campo não pode ser nulo.'}, help_text='Digite um link válido de até 200 caracteres', verbose_name='Campo de link')),
                ('slug', models.SlugField(error_messages={'blank': 'O campo não pode ser vazio.', 'invalid': 'Valor inválido.', 'null': 'O campo não pode ser nulo.', 'unique': 'Este valor já exite no banco de dados.'}, help_text='Esse campo é preenchido automaticamente com a data e com a chave unica', unique=True, verbose_name='Campo de slug')),
                ('selecionar', models.CharField(blank=True, choices=[('', ''), ('valor1', 'texto1'), ('valor2', 'texto2'), ('valor3', 'texto3')], default='', error_messages={'invalid': 'Valor inválido.', 'invalid_choice': 'Escolha inválida'}, help_text='Selecione uma opção', max_length=200, null=True, verbose_name='Campo de seleção de opções')),
                ('data', models.DateField(error_messages={'blank': 'O campo não pode ser vazio.', 'invalid': 'Valor inválido.', 'null': 'O campo não pode ser nulo.'}, help_text='selecione uma data no formato dd/mm/yyyy', verbose_name='Campo de data')),
                ('hora', models.TimeField(error_messages={'blank': 'O campo não pode ser vazio.', 'invalid': 'Valor inválido.', 'null': 'O campo não pode ser nulo.'}, help_text='selecione uma hora no formato h:m:s', verbose_name='Campo de hora')),
                ('datahora', models.DateTimeField(error_messages={'blank': 'O campo não pode ser vazio.', 'invalid': 'Valor inválido.', 'null': 'O campo não pode ser nulo.'}, help_text='selecione uma data-hora no formato dd/mm/yyyy h:m:s', verbose_name='Campo de data e hora')),
                ('duracao', models.DurationField(blank=True, error_messages={'invalid': 'Valor inválido.'}, help_text='selecione uma duração em segundos', null=True, verbose_name='Campo de duração')),
                ('arquivo', models.FileField(blank=True, error_messages={'invalid': 'Valor inválido.'}, help_text='faça um upload de um arquivo com qualquer extenção', null=True, upload_to='arquivos/', verbose_name='Campo de upload de arquivo')),
                ('imagem', models.ImageField(blank=True, error_messages={'invalid': 'Valor inválido.'}, help_text='faça um upload de uma imagem', null=True, upload_to='imagens/', verbose_name='Campo de upload de imagem')),
            ],
            options={
                'verbose_name': 'Exemplo',
                'verbose_name_plural': 'Exemplos',
                'ordering': ['chave_unica'],
            },
        ),
        migrations.CreateModel(
            name='CamposRelacionado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criados', models.DateField(verbose_name='Criação')),
                ('modificado', models.DateField(auto_now=True, verbose_name='Atualização')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('chave_estrangeira', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='CamposRelacionado1', related_query_name='CamposRelacionado11', to='central.exemplo')),
                ('chave_estrangeira_self', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CamposRelacionado2', related_query_name='CamposRelacionado2', to='central.camposrelacionado')),
                ('muitos_para_muitos', models.ManyToManyField(to='central.Exemplo')),
                ('muitos_para_muitos_self', models.ManyToManyField(blank=True, related_name='_camposrelacionado_muitos_para_muitos_self_+', to='central.CamposRelacionado')),
                ('um_para_um', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='CamposRelacionado3', related_query_name='CamposRelacionado3', to='central.exemplo')),
            ],
            options={
                'verbose_name': 'Modelo de relacionamento',
                'verbose_name_plural': 'Modelo de relacionamento',
            },
        ),
    ]
